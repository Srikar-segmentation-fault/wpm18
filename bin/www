#!/usr/bin/env node
const app = require("../app");
const http = require("http");
const { connPromise } = require("../app_server/models/db");

const port = normalizePort(process.env.PORT || "3000");
app.set("port", port);
const server = http.createServer(app);

// Wait for DB first
connPromise
  .then(() => {
    server.listen(port, () => {
      console.log(`RentEase running on http://localhost:${port}`);
    });
    server.on("error", onError);
    server.on("listening", onListening);
  })
  .catch(() => {
    // If DB fails, process.exit already called in db.js
  });

function normalizePort(val) {
  const p = parseInt(val, 10);
  if (Number.isNaN(p)) return val;
  if (p >= 0) return p;
  return false;
}
function onError(error) {
  if (error.syscall !== "listen") throw error;
  const bind = typeof port === "string" ? "Pipe " + port : "Port " + port;
  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
    default:
      throw error;
  }
}
function onListening() {}
